/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DataBase, DataBaseInterface } from "../../Database.sol/DataBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_main",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "targets",
        type: "bytes",
      },
    ],
    name: "setArrays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_backup",
        type: "address",
      },
    ],
    name: "setBackup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516108c33803806108c383398181016040528101906100329190610103565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d0826100a5565b9050919050565b6100e0816100c5565b81146100eb57600080fd5b50565b6000815190506100fd816100d7565b92915050565b600060208284031215610119576101186100a0565b5b6000610127848285016100ee565b91505092915050565b60805160a0516107626101616000396000818160e801526102890152600081816093015261023401526107626000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806350599edf1461003b578063b7dacbf114610057575b600080fd5b610055600480360381019061005091906104fa565b610073565b005b610071600480360381019061006c91906105a1565b610214565b005b600033905060008173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16148061011f57508173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16145b8061017757508173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b9050806101b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b09061062b565b60405180910390fd5b6000601484516101c991906106b3565b905060005b8181101561020d576000601482026020870101519050801990506000602060018401026000010181815550508080610205906106e4565b9150506101ce565b5050505050565b600033905060008173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614806102c057508173ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16145b8061031857508173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b90508061035a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103519061062b565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610407826103be565b810181811067ffffffffffffffff82111715610426576104256103cf565b5b80604052505050565b60006104396103a0565b905061044582826103fe565b919050565b600067ffffffffffffffff821115610465576104646103cf565b5b61046e826103be565b9050602081019050919050565b82818337600083830152505050565b600061049d6104988461044a565b61042f565b9050828152602081018484840111156104b9576104b86103b9565b5b6104c484828561047b565b509392505050565b600082601f8301126104e1576104e06103b4565b5b81356104f184826020860161048a565b91505092915050565b6000602082840312156105105761050f6103aa565b5b600082013567ffffffffffffffff81111561052e5761052d6103af565b5b61053a848285016104cc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061056e82610543565b9050919050565b61057e81610563565b811461058957600080fd5b50565b60008135905061059b81610575565b92915050565b6000602082840312156105b7576105b66103aa565b5b60006105c58482850161058c565b91505092915050565b600082825260208201905092915050565b7f4e6f7420617574686f7269736564000000000000000000000000000000000000600082015250565b6000610615600e836105ce565b9150610620826105df565b602082019050919050565b6000602082019050818103600083015261064481610608565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106be8261064b565b91506106c98361064b565b9250826106d9576106d8610655565b5b828204905092915050565b60006106ef8261064b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361072157610720610684565b5b60018201905091905056fea264697066735822122057e67c560bbef03788b72388706c3c3045bc401e3fa852a407996ee052321e7764736f6c63430008110033";

type DataBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataBase__factory extends ContractFactory {
  constructor(...args: DataBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _main: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DataBase> {
    return super.deploy(_main, overrides || {}) as Promise<DataBase>;
  }
  override getDeployTransaction(
    _main: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_main, overrides || {});
  }
  override attach(address: string): DataBase {
    return super.attach(address) as DataBase;
  }
  override connect(signer: Signer): DataBase__factory {
    return super.connect(signer) as DataBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataBaseInterface {
    return new utils.Interface(_abi) as DataBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataBase {
    return new Contract(address, _abi, signerOrProvider) as DataBase;
  }
}
