/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SpreadLove, SpreadLoveInterface } from "../SpreadLove";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address payable[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address payable[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseTokenSimple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109ac806100206000396000f3fe6080604052600436106100345760003560e01c806351ba162c14610039578063c73a2d6014610062578063e63d38ed1461008b575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610598565b6100a7565b005b34801561006e57600080fd5b5061008960048036038101906100849190610598565b610199565b005b6100a560048036038101906100a0919061062d565b61035d565b005b60005b84849050811015610191578573ffffffffffffffffffffffffffffffffffffffff166323b872dd338787858181106100e5576100e46106ae565b5b90506020020160208101906100fa919061071b565b86868681811061010d5761010c6106ae565b5b905060200201356040518463ffffffff1660e01b8152600401610132939291906107cf565b6020604051808303816000875af1158015610151573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610175919061083e565b61017e57600080fd5b80806101899061089a565b9150506100aa565b505050505050565b6000805b858590508110156101e2578383828181106101bb576101ba6106ae565b5b90506020020135826101cd91906108e2565b915080806101da9061089a565b91505061019d565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161022093929190610916565b6020604051808303816000875af115801561023f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610263919061083e565b61026c57600080fd5b60005b85859050811015610354578673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8787848181106102a9576102a86106ae565b5b90506020020160208101906102be919061071b565b8686858181106102d1576102d06106ae565b5b905060200201356040518363ffffffff1660e01b81526004016102f592919061094d565b6020604051808303816000875af1158015610314573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610338919061083e565b61034157600080fd5b808061034c9061089a565b91505061026f565b50505050505050565b60005b848490508110156104055784848281811061037e5761037d6106ae565b5b9050602002016020810190610393919061071b565b73ffffffffffffffffffffffffffffffffffffffff166108fc8484848181106103bf576103be6106ae565b5b905060200201359081150290604051600060405180830381858888f193505050501580156103f1573d6000803e3d6000fd5b5080806103fd9061089a565b915050610360565b506000479050600081111561045c573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561045a573d6000803e3d6000fd5b505b5050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104988261046d565b9050919050565b60006104aa8261048d565b9050919050565b6104ba8161049f565b81146104c557600080fd5b50565b6000813590506104d7816104b1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610502576105016104dd565b5b8235905067ffffffffffffffff81111561051f5761051e6104e2565b5b60208301915083602082028301111561053b5761053a6104e7565b5b9250929050565b60008083601f840112610558576105576104dd565b5b8235905067ffffffffffffffff811115610575576105746104e2565b5b602083019150836020820283011115610591576105906104e7565b5b9250929050565b6000806000806000606086880312156105b4576105b3610463565b5b60006105c2888289016104c8565b955050602086013567ffffffffffffffff8111156105e3576105e2610468565b5b6105ef888289016104ec565b9450945050604086013567ffffffffffffffff81111561061257610611610468565b5b61061e88828901610542565b92509250509295509295909350565b6000806000806040858703121561064757610646610463565b5b600085013567ffffffffffffffff81111561066557610664610468565b5b610671878288016104ec565b9450945050602085013567ffffffffffffffff81111561069457610693610468565b5b6106a087828801610542565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006106e88261046d565b9050919050565b6106f8816106dd565b811461070357600080fd5b50565b600081359050610715816106ef565b92915050565b60006020828403121561073157610730610463565b5b600061073f84828501610706565b91505092915050565b6107518161048d565b82525050565b6000819050919050565b600061077c6107776107728461046d565b610757565b61046d565b9050919050565b600061078e82610761565b9050919050565b60006107a082610783565b9050919050565b6107b081610795565b82525050565b6000819050919050565b6107c9816107b6565b82525050565b60006060820190506107e46000830186610748565b6107f160208301856107a7565b6107fe60408301846107c0565b949350505050565b60008115159050919050565b61081b81610806565b811461082657600080fd5b50565b60008151905061083881610812565b92915050565b60006020828403121561085457610853610463565b5b600061086284828501610829565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108a5826107b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108d7576108d661086b565b5b600182019050919050565b60006108ed826107b6565b91506108f8836107b6565b92508282019050808211156109105761090f61086b565b5b92915050565b600060608201905061092b6000830186610748565b6109386020830185610748565b61094560408301846107c0565b949350505050565b600060408201905061096260008301856107a7565b61096f60208301846107c0565b939250505056fea264697066735822122048c91b9561ed38983db278e5a78d4b7c6110e38343ce29b4d3f54dbf22afd92064736f6c63430008110033";

type SpreadLoveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpreadLoveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpreadLove__factory extends ContractFactory {
  constructor(...args: SpreadLoveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpreadLove> {
    return super.deploy(overrides || {}) as Promise<SpreadLove>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SpreadLove {
    return super.attach(address) as SpreadLove;
  }
  override connect(signer: Signer): SpreadLove__factory {
    return super.connect(signer) as SpreadLove__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpreadLoveInterface {
    return new utils.Interface(_abi) as SpreadLoveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpreadLove {
    return new Contract(address, _abi, signerOrProvider) as SpreadLove;
  }
}
